@use "sass:map";
@use "sass:list";

$breakpoints: (
  mobile: 600px,
  tablet: 900px,
  desktop: 1024px,
  hd: 1280px,
  fhd: 1920px,
  2k: 2560px,
  4k: 3840px,
);

$btn-paddings: (
  xs: (
    2px 4px,
    2px 4px,
    4px 8px,
    4px 8px,
    6px 12px,
    8px 16px,
    12px 24px,
  ),
  sm: (
    2px 4px,
    2px 4px,
    4px 8px,
    6px 12px,
    8px 16px,
    12px 24px,
    14px 28px,
  ),
  md: (
    2px 6px,
    4px 8px,
    6px 12px,
    6px 12px,
    8px 16px,
    14px 28px,
    18px 34px,
  ),
  lg: (
    4px 8px,
    6px 12px,
    8px 12px,
    8px 16px,
    16px 24px,
    18px 38px,
    21px 48px,
  ),
);

$btn-text-size: (
  xs: (
    8px,
    10px,
    12px,
    14px,
    16px,
    18px,
    20px,
  ),
  sm: (
    12px,
    14px,
    16px,
    18px,
    20px,
    22px,
    24px,
  ),
  md: (
    14px,
    16px,
    18px,
    20px,
    22px,
    24px,
    26px,
  ),
  lg: (
    16px,
    18px,
    20px,
    22px,
    24px,
    26px,
    28px,
  ),
);
@mixin flex-box($direction: false, $content: false, $aliagn: false, $warp: false, $gap: false) {
  display: flex;

  @if ($direction) {
    flex-direction: $direction;
  }
  @if ($content) {
    justify-content: $content;
  }
  @if ($aliagn) {
    align-items: $aliagn;
  }
  @if ($warp) {
    flex-wrap: $warp;
  }
  @if ($gap) {
    gap: $gap;
  }
}

@mixin response-to($media) {
  @media (min-width: map.get($breakpoints, $media)) {
    @content;
  }
}

@mixin set-padding-btn($size) {
  $breakpoint-keys: map.keys($breakpoints);
  $padding-values: map.get($btn-paddings, $size);
  $padding-text: map.get($btn-text-size, $size);

  @for $i from 1 through list.length($breakpoint-keys) {
    $media: list.nth($breakpoint-keys, $i);
    $padding: list.nth($padding-values, $i);
    $text-size: list.nth($padding-text, $i);

    @include response-to($media) {
      padding: $padding;
      font-size: $text-size;
    }
  }
}
